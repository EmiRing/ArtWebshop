// <auto-generated />
using System;
using ArtWebshop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArtWebshop.Data.Migrations.Products
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20210714144351_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArtWebshop.Models.Artist", b =>
                {
                    b.Property<string>("ArtistId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("ArtWebshop.Models.ArtistRow", b =>
                {
                    b.Property<string>("RowId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtistId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RowId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("ProductId");

                    b.ToTable("ArtistRows");
                });

            modelBuilder.Entity("ArtWebshop.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BillingCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingStreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryStreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ArtWebshop.Models.OrderRow", b =>
                {
                    b.Property<string>("RowId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RowId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderRows");
                });

            modelBuilder.Entity("ArtWebshop.Models.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtistId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaintingOfTheWeek")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ArtWebshop.Models.ArtistRow", b =>
                {
                    b.HasOne("ArtWebshop.Models.Artist", "Artist")
                        .WithMany("ArtistRows")
                        .HasForeignKey("ArtistId");

                    b.HasOne("ArtWebshop.Models.Product", "Product")
                        .WithMany("ArtistRows")
                        .HasForeignKey("ProductId");

                    b.Navigation("Artist");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ArtWebshop.Models.OrderRow", b =>
                {
                    b.HasOne("ArtWebshop.Models.Order", "Order")
                        .WithMany("OrderRows")
                        .HasForeignKey("OrderId");

                    b.HasOne("ArtWebshop.Models.Product", "Product")
                        .WithMany("OrderRows")
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ArtWebshop.Models.Product", b =>
                {
                    b.HasOne("ArtWebshop.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("ArtWebshop.Models.Artist", b =>
                {
                    b.Navigation("ArtistRows");
                });

            modelBuilder.Entity("ArtWebshop.Models.Order", b =>
                {
                    b.Navigation("OrderRows");
                });

            modelBuilder.Entity("ArtWebshop.Models.Product", b =>
                {
                    b.Navigation("ArtistRows");

                    b.Navigation("OrderRows");
                });
#pragma warning restore 612, 618
        }
    }
}

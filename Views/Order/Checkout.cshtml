@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model CheckoutViewModel
@{
    var shoppingCartItems = Model.shoppingCart.GetShoppingCartItems();
}
<div id="lapp">
    <table class="table table-hover table-bordered mb-0">
        <thead>
            <tr>
                <th class="text-left col-6" scope="col">Produkt</th>
                <th class="text-right col-2" scope="col">Antal</th>
                <th class="text-right col-3" scope="col">Pris</th>
                <th class="col-1" scope="col"></th>
            </tr>
        </thead>
        <tbody>
            
                <tr is="cart-row" v-for="item in shoppingCartItems"
                           v-bind:key="item.id"
                           v-bind:item="item"></tr>
            
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2" class="text-right">Total:</td>
                <td colspan="2" class="text-left">
                    {{total}} kr
                </td>
            </tr>
        </tfoot>
    </table>
</div>


<script>

Vue.component('cart-row', {
    props: ['item'],
    computed: {
        subtotal: function() {
            return Math.round( (this.item.product.price * this.item.amount)*100)/100
        }
    },
    methods: {
        async add(id) {
            const postData = { itemId: id, check: "add" };
            await axios.post("/ShoppingCart/ChangeAmount", postData);
            this.item.amount++;
        },
        async reduce(id) {
            const postData = { itemId: id, check: "reduce" };
            await axios.post("/ShoppingCart/ChangeAmount", postData);
            this.item.amount--;
            if (this.item.amount <= 0) {
                this.$destroy();
                this.$el.parentNode.removeChild(this.$el);
            }

        },
        async remove(id) {
            const postData = { itemId: id, check: "remove" };
            await axios.post("/ShoppingCart/ChangeAmount", postData);
            this.item.amount = 0;
            this.$destroy();
            this.$el.parentNode.removeChild(this.$el);


        }

    },
    template: '<tr class="p-2">\
                    <td class="text-left">{{ item.product.title }}</td>\
                    <td class="text-center">\
                    <a class="pointer" v-on:click="reduce(item.product.productId)"> - </a> \
                    {{item.amount}} \
                    <a class="pointer" v-on:click="add(item.product.productId)"> + </a></td>\
                    <td class="text-right"> {{item.product.price}} kr<br />{{this.subtotal}} kr</td>\
                    <td class="text-left">\
                        <a class="pointer" v-on:click="remove(item.product.productId)"><i class="far fa-trash-alt"></i></a>\
                    </td>\
                  </tr>'
})


new Vue({
    el: '#lapp',
    data: {
        shoppingCartItems: [],
        shoppingCartTotal: 0
    },
    computed: {
        total() {
            return this.shoppingCartItems.reduce((sum, item) => Math.round((sum + item.amount * item.product.price)*100)/100, 0)
        }
    },
    created() {
        axios.get("/ShoppingCart/GetVueData")
            .then(res => {
                this.shoppingCartItems = res.data.shoppingCart.shoppingCartItems,
                    this.shoppingCartTotal = res.data.shoppingCartTotal
            })
    }
});
</script>